// Code generated by sysl DO NOT EDIT.
package petdemo

import (
	"github.com/anz-bank/sysl-go/config"
	"github.com/anz-bank/sysl-go/core"
	"github.com/anz-bank/sysl-go/handlerinitialiser"
	"github.com/anz-bank/sysl-template/internal/gen/flickr"
	"github.com/anz-bank/sysl-template/internal/gen/petstore"
)

// DownstreamClients for Petdemo
type DownstreamClients struct {
	flickrClient   *flickr.Client
	petstoreClient *petstore.Client
}

// BuildRestHandlerInitialiser ...
func BuildRestHandlerInitialiser(serviceInterface ServiceInterface, callback core.RestGenCallback, downstream *DownstreamClients) handlerinitialiser.HandlerInitialiser {
	serviceHandler := NewServiceHandler(callback, &serviceInterface, downstream.flickrClient, downstream.petstoreClient)
	serviceRouter := NewServiceRouter(callback, serviceHandler)
	return serviceRouter
}

// BuildDownstreamClients ...
func BuildDownstreamClients(cfg *config.DefaultConfig) (*DownstreamClients, error) {
	var err error = nil
	flickrHTTPClient, flickrErr := core.BuildDownstreamHTTPClient("flickr", &cfg.GenCode.Downstream.(*DownstreamConfig).Flickr)

	petstoreHTTPClient, petstoreErr := core.BuildDownstreamHTTPClient("petstore", &cfg.GenCode.Downstream.(*DownstreamConfig).Petstore)

	if flickrErr != nil {
		return nil, flickrErr
	}

	if petstoreErr != nil {
		return nil, petstoreErr
	}

	flickrClient := flickr.NewClient(flickrHTTPClient, cfg.GenCode.Downstream.(*DownstreamConfig).Flickr.ServiceURL)

	petstoreClient := petstore.NewClient(petstoreHTTPClient, cfg.GenCode.Downstream.(*DownstreamConfig).Petstore.ServiceURL)

	return &DownstreamClients{flickrClient: flickrClient,
		petstoreClient: petstoreClient,
	}, err
}

// NewDefaultConfig ...
func NewDefaultConfig() config.DefaultConfig {
	return config.DefaultConfig{
		Library: config.LibraryConfig{},
		GenCode: config.GenCodeConfig{Downstream: &DownstreamConfig{}},
	}
}
