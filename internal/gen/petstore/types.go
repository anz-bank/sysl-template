// Code generated by sysl DO NOT EDIT.
package petstore

import (
	"encoding/json"
	"errors"
	"time"

	"github.com/anz-bank/sysl-go/validator"
	"github.com/rickb777/date"
)

// Reference imports to suppress unused errors
var _ = time.Parse

// Reference imports to suppress unused errors
var _ = date.Parse

// Error ...
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// Pet ...
type Pet struct {
	ID   int64   `json:"id"`
	Name string  `json:"name"`
	Tag  *string `json:"tag,omitempty"`
}

func (t *Pet) UnmarshalJSON(data []byte) error {
	inner := struct {
		Tag  *string `json:"Tag,omitempty"`
		ID   *int64  `json:"ID,omitempty"`
		Name *string `json:"Name,omitempty"`
	}{}
	err := json.Unmarshal(data, &inner)
	if err != nil {
		return err
	}
	if inner.ID == nil {
		return errors.New("ID cannot be nil")
	}

	if inner.Name == nil {
		return errors.New("Name cannot be nil")
	}

	*t = Pet{
		Tag:  inner.Tag,
		ID:   *inner.ID,
		Name: *inner.Name,
	}
	return nil
}

// GetPetListRequest ...
type GetPetListRequest struct {
}

// *Error validator
func (s *Error) Validate() error {
	return validator.Validate(s)
}

// *Pet validator
func (s *Pet) Validate() error {
	return validator.Validate(s)
}
